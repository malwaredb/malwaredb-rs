name: Test
on: [ push, pull_request ]
permissions:
  contents: read
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: block
          allowed-endpoints: >
            azure.archive.ubuntu.com:80
            crates.io:443
            esm.ubuntu.com:443
            github.com:443
            index.crates.io:443
            motd.ubuntu.com:443
            ppa.launchpadcontent.net:443
            static.crates.io:443
            static.rust-lang.org:443

      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
      - name: Update Rust toolchain
        run: rustup update
      - name: Install GUI dependencies
        run: sudo apt-get install -y libxcb-shape0-dev libxcb-xfixes0-dev libx11-dev libxkbcommon-dev libfontconfig-dev libxext-dev libxft-dev libxinerama-dev libxcursor-dev libxrender-dev libxfixes-dev
      - name: Build client
        run: cargo build --workspace --bin mdb_client
      - name: Build server
        run: cargo build --features=admin,admin-gui,sqlite,vt --bin mdb_server
      - name: cargo test
        run: cargo test --workspace

  #postgres:
  #  runs-on: ubuntu-latest
  #  services:
  #    postgres:
  #      image: ghcr.io/malwaredb/docker:main
  #      env:
  #        POSTGRES_PASSWORD: malwaredbtesting
  #        POSTGRES_HOST_AUTH_METHOD: trust
  #        POSTGRES_DB: malwaredbtesting
  #        POSTGRES_USER: malwaredbtesting
  #      ports:
  #        - 5432:5432
  #      options: >-
  #        --health-cmd pg_isready
  #        --health-interval 10s
  #        --health-timeout 5s
  #        --health-retries 5
  #        -h 0.0.0.0
  #  steps:
  #    - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
      #- name: Create database
      #  run: |
      #    PGPASSWORD=malwaredbtesting psql -h 127.0.0.1 -p ${{ job.services.postgres.ports[5432] }} -tc "create user malwaredbtesting with password 'malwaredbtesting';"
      #    PGPASSWORD=malwaredbtesting psql -h 127.0.0.1 -p ${{ job.services.postgres.ports[5432] }} -tc "create database malwaredbtesting owner malwaredbtesting;"
  #    - name: Load extensions
  #      run: |
  #        PGPASSWORD=malwaredbtesting psql -U malwaredbtesting -h 127.0.0.1 -p ${{ job.services.postgres.ports[5432] }} -d malwaredbtesting -tc "CREATE OR REPLACE FUNCTION fuzzy_hash_compare(TEXT, TEXT) RETURNS INTEGER AS 'ssdeep_psql.so', 'pg_fuzzy_hash_compare' LANGUAGE 'c';"
  #        PGPASSWORD=malwaredbtesting psql -U malwaredbtesting -h 127.0.0.1 -p ${{ job.services.postgres.ports[5432] }} -d malwaredbtesting -tc "CREATE OR REPLACE FUNCTION tlsh_compare(TEXT, TEXT) RETURNS INTEGER AS 'tlsh_psql.so', 'pg_tlsh_compare' LANGUAGE 'c';"
  #        PGPASSWORD=malwaredbtesting psql -U malwaredbtesting -h 127.0.0.1 -p ${{ job.services.postgres.ports[5432] }} -d malwaredbtesting -tc "CREATE OR REPLACE FUNCTION sdhash_compare(TEXT, TEXT) RETURNS INTEGER AS 'sdhash_psql.so', 'pg_sdhash_compare' LANGUAGE 'c';"
  #        PGPASSWORD=malwaredbtesting psql -U malwaredbtesting -h 127.0.0.1 -p ${{ job.services.postgres.ports[5432] }} -d malwaredbtesting -tc "CREATE OR REPLACE FUNCTION lzjd_compare(TEXT, TEXT) RETURNS INTEGER AS 'lzjd_psql.so', 'pg_lzjd_compare' LANGUAGE 'c';"
  #    - name: MalwareDB postgres test
  #      run: |
  #        PG_PORT=${{ job.services.postgres.ports[5432] }} cargo test db --workspace -- --ignored
