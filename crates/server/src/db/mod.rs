//!
//! Postgres is the database used by MalwareDB.
//! However, SQLite will be used for unit testing. This option can be allowed by using the `sqlite`
//! feature flag. When using SQLite, any similarity functions must be calculated by MalwareDB.

#![allow(unused)]

mod pg;

#[cfg(any(test, feature = "sqlite"))]
mod sqlite;

use anyhow::{bail, Result};

pub(crate) enum DatabaseType {
    Postgres,
    #[cfg(any(test, feature = "sqlite"))]
    SQLite,
}

impl DatabaseType {
    pub(crate) fn from_string(arg: &str) -> Result<Self> {
        #[cfg(any(test, feature = "sqlite"))]
        if arg.starts_with("file:") {
            return Ok(DatabaseType::SQLite);
        }

        if arg.starts_with("postgresql://") {
            return Ok(DatabaseType::Postgres);
        }

        bail!("unknown database type {arg}")
    }
}

trait DatabaseConnection {}
