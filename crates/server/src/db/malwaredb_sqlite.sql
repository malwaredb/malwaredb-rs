PRAGMA foreign_keys = ON;

CREATE TABLE filetype (
      id INTEGER PRIMARY KEY ,
      name text NOT NULL UNIQUE,
      description text,
      magic text NOT NULL UNIQUE,
      executable INTEGER
);

INSERT INTO filetype(name,description,magic,executable) VALUES
('PE32', '.EXEs and other Windows executables', '4D5A|5A4D', true),
('ELF', 'Executable and Linkable Format, used for applications and libraries on Linux, BSD, Solaris, Haiku, and other OSes', '7f454c46', true),
('Mach-O', 'mac OS executable format for applications, frameworks, and libraries', 'FEEDFACE|FEEDFACF|CEFAEDFE|CFFAEDFE', true),
('Fat Mach-O', 'mac OS executable format for applications, frameworks, and libraries', 'CAFEBABE', true),
('PDF', 'Adobe Portable Document Format (PDF)', '25504446', false),
('Office97', 'Microsoft Office 97 and other types (Compound Document Format)', 'D0CF11E0', false),
('RTF', 'Rich Text Format (RTF)', '7b5c727466', false);

CREATE TABLE file (
    id INTEGER PRIMARY KEY,
    sha1 text NOT NULL,
    sha256 text NOT NULL,
    sha512 text NOT NULL UNIQUE,
    md5 text NOT NULL,
    lzjd text,
    ssdeep text,
    sdhash text,
    tlsh text,
    createddate text,
    filetypeid integer NOT NULL,
    size integer NOT NULL,
    entropy real NOT NULL,
    confirmedmalicious integer -- boolean
);


CREATE TABLE executable (
    fileid INTEGER PRIMARY KEY,
    pehash text,
    importhash text,
    importhashfuzzy text,
    packed INTEGER, -- boolean
    sections INTEGER NOT NULL,
    sectionnames text,
    sectionentropies text,
    sectionexec text,
    FOREIGN KEY (fileid) REFERENCES file(id)
);


CREATE TABLE pdf (
    fileid INTEGER UNIQUE,
    pages INTEGER,
    streams INTEGER,
    javascript INTEGER,
    openAction INTEGER,
    largeColourSpace INTEGER,
    embeddedFiles INTEGER,
    PRIMARY KEY (fileid),
    FOREIGN KEY (fileid) REFERENCES file(id)
);


CREATE TABLE label (
    id integer PRIMARY KEY,
    name text NOT NULL UNIQUE
);


CREATE TABLE source (
    id INTEGER PRIMARY KEY,
    name text NOT NULL,
    description text,
    url text,
    firstacquisition text NOT NULL,
    releasable int NOT NULL
);


CREATE TABLE filelabel (
    fileid INTEGER NOT NULL,
    labelid INTEGER NOT NULL,
    added text NOT NULL,
    PRIMARY KEY (fileid, labelid),
    FOREIGN KEY (fileid) REFERENCES file(id),
    FOREIGN KEY (labelid) REFERENCES label(id)
);


CREATE TABLE sourcelabel (
    sourceid INTEGER NOT NULL REFERENCES source(id),
    labelid INTEGER NOT NULL REFERENCES label(id),
    added text,
    PRIMARY KEY (sourceid, labelid),
    FOREIGN KEY (sourceid) REFERENCES source(id),
    FOREIGN KEY (labelid) REFERENCES label(id)
);


CREATE TABLE grp (
    id INTEGER PRIMARY KEY,
    name text NOT NULL,
    description text,
    parent INTEGER,
    FOREIGN KEY (parent) REFERENCES grp(id)
);


CREATE TABLE person (
    id INTEGER PRIMARY KEY,
    email text NOT NULL UNIQUE,
    uname text NOT NULL UNIQUE,
    firstname text NOT NULL,
    lastname text NOT NULL,
    organisation text,
    phone text,
    password blob,
    apikey text UNIQUE,
    created text NOT NULL
);


CREATE TABLE filesource (
    fileid INTEGER NOT NULL,
    sourceid INTEGER NOT NULL,
    userid INTEGER NOT NULL,
    filename text NOT NULL,
    firstseen text NOT NULL,
    PRIMARY KEY (fileid, sourceid),
    FOREIGN KEY (userid) REFERENCES person(id),
    FOREIGN KEY (fileid) REFERENCES file(id),
    FOREIGN KEY (sourceid) REFERENCES source(id)
);


CREATE TABLE mdbconfig (
    version REAL NOT NULL,
    name text NOT NULL,
    defaultFileSource INTEGER,
    FOREIGN KEY (defaultFileSource) REFERENCES source(id)
);

INSERT INTO PERSON VALUES(0, 'admin@example.com', 'admin', 'ADMIN', 'USER', NULL, NULL, NULL, NULL, '1970-01-01 00:00:00.000');

CREATE TABLE polyglot (
    fileid integer NOT NULL,
    filetypeid integer NOT NULL,
    explaination text,
    PRIMARY KEY (fileid, filetypeid),
    FOREIGN KEY (fileid) REFERENCES file(id),
    FOREIGN KEY (filetypeid) REFERENCES filetype(id)
);


CREATE TABLE usergroup (
    pid integer NOT NULL,
    gid integer NOT NULL,
    added text NOT NULL,
    PRIMARY KEY (pid, gid),
    FOREIGN KEY (pid) REFERENCES person(id),
    FOREIGN KEY (gid) REFERENCES grp(id)
);

INSERT INTO grp(id, name, description) VALUES(0, 'admin', 'Administrative users');
INSERT INTO usergroup VALUES(0, 0, '1970-01-01 00:00:00.000');


CREATE TABLE vtclean (
    fileid integer NOT NULL,
    tstamp text NOT NULL,
    PRIMARY KEY (fileid, tstamp),
    FOREIGN KEY (fileid) REFERENCES file(id)
);


CREATE TABLE vthits (
    fileid integer NOT NULL,
    tstamp text NOT NULL,
    hits integer NOT NULL,
    vtdetail text, -- JSON
    PRIMARY KEY (fileid, tstamp),
    FOREIGN KEY (fileid) REFERENCES file(id)
);
