use super::State;
use api;

use std::sync::Arc;

use api::ServerInfo;
use axum::http::StatusCode;
use axum::routing::get;
use axum::{Extension, Json, Router};

pub fn app(state: State) -> Router {
    Router::new()
        .route("/", get(health))
        .route(api::SERVER_INFO, get(get_mdb_info))
        .layer(Extension(Arc::new(state)))
}

async fn health() -> StatusCode {
    StatusCode::OK
}

#[axum_macros::debug_handler]
async fn get_mdb_info(Extension(state): Extension<Arc<State>>) -> Json<ServerInfo> {
    let server_info = state
        .get_info()
        .await
        .map_err(|e| format!("Error: {e}"))
        .unwrap();
    Json(server_info)
}
