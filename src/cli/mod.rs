mod admin;
mod run;

use std::process::ExitCode;

use clap::{Parser, Subcommand};

#[derive(Parser, Debug)]
#[command(author, version, about)]
pub struct Options {
    /// Subcommands (with their own options)
    #[clap(subcommand)]
    cmd: Subcommands,
}

impl Options {
    pub fn execute(self) -> anyhow::Result<ExitCode> {
        match self.cmd {
            Subcommands::Run(cmd) => cmd.execute(),
            Subcommands::Admin(cmd) => cmd.execute(),
        }
    }
}

#[derive(Subcommand, Debug)]
enum Subcommands {
    Run(run::Run),
    Admin(admin::Admin),
}
