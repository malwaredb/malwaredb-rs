use crate::cli::config::Config;

use std::process::ExitCode;

use clap::{Args, Subcommand};

/// Show (or toggle) the state of MalwareDB submitting samples to VirusTotal
#[derive(Clone, Debug, Args, PartialEq)]
pub struct VirusTotal {
    /// Optionally enable or disable VirusTotal submission
    #[clap(subcommand)]
    option: Option<Options>,
}

#[derive(Clone, Debug, Subcommand, PartialEq, Eq)]
enum Options {
    /// Specifies that files may be sent to VirusTotal.
    Enable,

    /// Clears the VT flag, files will not be sent to VirusTotal.
    Disable,
}

impl VirusTotal {
    pub async fn execute(&self, config: &Config) -> anyhow::Result<ExitCode> {
        let state = config.state().await?;

        match self.option {
            None => {
                let virustotal_state = if state.db_config.send_samples_to_vt {
                    "enabled"
                } else {
                    "disabled"
                };
                println!("VT submission {virustotal_state}");
            }
            Some(Options::Enable) => {
                state.db_type.enable_vt_upload().await?;
                println!("VT submission flag set.");
            }
            Some(Options::Disable) => {
                state.db_type.disable_vt_upload().await?;
                println!("VT submission flag unset.");
            }
        }
        Ok(ExitCode::SUCCESS)
    }
}
