import { Button, GroupBox, LineEdit, ListView, StandardListView, TabWidget } from "std-widgets.slint";

export struct GuiUser {
    id: int,
    uname: string,
    email: string,
    fname: string,
    lname: string,
    active: bool,
}

component AdminTabs {
    width: 420px;
    height: 380px;
    in-out property<int> users-index: UsersList.current-item;
    in-out property<[GuiUser]> users;
    in-out property<[StandardListViewItem]> users_list <=> UsersList.model;
    in-out property<string> user-status <=> UserStatus.text;
    out property<string> user-name: UNameEdit.text;
    out property<string> user-fname: FNameEdit.text;
    out property<string> user-lname: LNameEdit.text;
    out property<string> user-email: EmailEdit.text;
    out property<string> user-password: PasswordChange.text;
    callback users-save-button-pressed <=> SaveButton.clicked;
    TabWidget {
        Tab {
            title: "Users";
            HorizontalLayout {
                alignment: start;
                spacing: 10px;
                UsersList := StandardListView {
                    width: 150px;
                    height: 150px;
                    model: [ ];
                    current-item-changed => {
                        UNameEdit.text = "\{root.users[UsersList.current-item].uname}";
                        FNameEdit.text = "\{root.users[UsersList.current-item].fname}";
                        LNameEdit.text = "\{root.users[UsersList.current-item].lname}";
                        EmailEdit.text = "\{root.users[UsersList.current-item].email}";
                        PasswordChange.text = "";
                        PasswordConfirm.text = "";
                    }
                }
                GridLayout {
                    spacing: 8px;
                    Row {
                        Text {
                            text: "User ID";
                            height: 30px;
                        }
                        // Change to integer input type when this is released
                        // https://github.com/slint-ui/slint/pull/3377
                        UserIDEdit := LineEdit {
                            text: "\{root.users[UsersList.current-item].id}";
                            enabled: false;
                            height: 30px;
                        }
                    }
                    Row {
                        Text {
                            text: "User Name";
                            height: 30px;
                        }
                        UNameEdit := LineEdit {
                            text: "\{root.users[UsersList.current-item].uname}";
                            enabled: root.users[UsersList.current-item].id != 0;
                            placeholder-text: "user name";
                            height: 30px;
                        }
                    }
                    Row {
                        Text {
                            text: "First Name";
                            height: 30px;
                        }
                        FNameEdit := LineEdit {
                            text: "\{root.users[UsersList.current-item].fname}";
                            placeholder-text: "first name";
                            height: 30px;
                        }
                    }
                    Row {
                        Text {
                            text: "Last Name";
                            height: 30px;
                        }
                        LNameEdit := LineEdit {
                            text: "\{root.users[UsersList.current-item].lname}";
                            placeholder-text: "last name";
                            height: 30px;
                        }
                    }
                    Row {
                        Text {
                            text: "Email";
                            height: 30px;
                        }
                        EmailEdit := LineEdit {
                            text: "\{root.users[UsersList.current-item].email}";
                            placeholder-text: "user's email";
                            height: 30px;
                        }
                    }
                    Row {
                        Text {
                            text: "Change\npassword";
                            height: 40px;
                        }
                        PasswordChange := LineEdit {
                            placeholder-text: "user's password";
                            input-type: password;
                            height: 30px;
                        }
                    }
                    Row {
                        Text {
                            text: "Confirm\npassword";
                            height: 40px;
                        }
                        PasswordConfirm := LineEdit {
                            placeholder-text: "user's password";
                            input-type: password;
                            height: 30px;
                        }
                    }
                    Row {
                        Button {
                            text: "Reset";
                            clicked => {
                                UNameEdit.text = "\{root.users[UsersList.current-item].uname}";
                                FNameEdit.text = "\{root.users[UsersList.current-item].fname}";
                                LNameEdit.text = "\{root.users[UsersList.current-item].lname}";
                                EmailEdit.text = "\{root.users[UsersList.current-item].email}";
                                PasswordChange.text = "";
                                PasswordConfirm.text = "";
                                UserStatus.text = "";
                            }
                            height: 30px;
                        }
                        SaveButton := Button {
                            text: "Save";
                            enabled: PasswordChange.text == PasswordConfirm.text;
                            height: 30px;
                        }
                    }
                    UserStatus := Text {
                        text: "";
                        height: 20px;
                        font-size: 10pt;
                        color: #FF0000;
                        colspan: 2;
                    }
                }
            }
        }
        Tab {
            title: "Groups";
            Text {
                text: "Not Yet Implemented";
                height: 30px;
            }
            //StandardListView {
            //    width: 150px;
            //    height: 150px;
            //    model: [ ];
            //}
        }
        Tab {
            title: "Sources";
            Text {
                text: "Not Yet Implemented";
                height: 30px;
            }
            //StandardListView {
            //    width: 150px;
            //    height: 150px;
            //    model: [ ];
            //}
        }
    }
}

export component AdminWindow inherits Window {
    width: 440px;
    height: 390px;
    title: "MalwareDB Admin";

    in-out property<int> users-index <=> gui.users-index;
    in-out property<[GuiUser]> users <=> gui.users;
    in-out property<[StandardListViewItem]> users_list <=> gui.users_list;
    in-out property<string> user-status <=> gui.user-status;
    out property<string> user-name: gui.user-name;
    out property<string> user-fname: gui.user-fname;
    out property<string> user-lname: gui.user-lname;
    out property<string> user-email: gui.user-email;
    out property<string> user-password: gui.user-password;
    callback users-save-button-pressed <=> gui.users-save-button-pressed;

    gui := AdminTabs {}
}