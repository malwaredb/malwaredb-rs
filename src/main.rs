pub(crate) mod cli;
#[cfg(feature = "admin-gui")]
pub(crate) mod gui;

use std::process::ExitCode;

use clap::{CommandFactory, Parser};

/// MDB version
pub const MDB_VERSION: &str = env!("CARGO_PKG_VERSION");

#[tokio::main]
async fn main() -> anyhow::Result<ExitCode> {
    if std::env::var("RUST_LOG_JSON").is_ok() {
        tracing_subscriber::fmt::fmt()
            .json()
            .with_env_filter(tracing_subscriber::EnvFilter::from_default_env())
            .init();
    } else {
        tracing_subscriber::fmt::init();
    }

    let app = cli::Options::parse();

    if let Some(generator) = app.generator {
        let mut cmd = cli::Options::command();
        eprintln!("Generating completion file for {generator:?}...");
        cli::print_completions(generator, &mut cmd);
        return Ok(ExitCode::SUCCESS);
    }

    app.execute().await
}
